{
    "hints": {
        "update_global()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_local(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deposit_asa(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "withdraw_asa(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_deposit_algos(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_withdraw_algos(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transferasafromvault()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transferasafromvaultwithoutclose()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "depositasatovault()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optintoasset()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "sendasatobuyer()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "sendasatobuyercloseout()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "depositalgos(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "receivealgos(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 2
        }
    },
    "schema": {
        "global": {
            "declared": {
                "owner": {
                    "type": "bytes",
                    "key": "OwnerAddress",
                    "descr": "Vault owner's address"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "algo_balance": {
                    "type": "uint64",
                    "key": "microAlgoBalance",
                    "descr": "Vault microAlgo balance"
                },
                "asa_balance": {
                    "type": "uint64",
                    "key": "AssetBalances",
                    "descr": "Vault asset balances"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "VaultApp",
        "methods": [
            {
                "name": "update_global",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "update_local",
                "args": [
                    {
                        "type": "uint64",
                        "name": "li"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "deposit_asa",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "withdraw_asa",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "update_deposit_algos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "update_withdraw_algos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "transferasafromvault",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "transferasafromvaultwithoutclose",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "depositasatovault",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "optintoasset",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "sendasatobuyer",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "sendasatobuyercloseout",
                "args": [],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "depositalgos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "receivealgos",
                "args": [
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "close_out": "CALL",
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}